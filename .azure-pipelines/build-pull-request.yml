# This pipeline was generated from the classic pipeline "[IntelliJ] build-feature(endgame)-pull-request" on 2024-01-08 with https://aka.ms/1ESPTMigration (v1.1.0): https://dev.azure.com/mseng/VSJava/_build?definitionId=10967
#
# The following items require attention:
# Variables were exported from the classic pipeline, confirm that `variables` values do not contain private information. If a variable contains private information, follow the guidance on handling secret variables: https://learn.microsoft.com/en-us/azure/devops/pipelines/process/set-secret-variables
# No trigger found, defaulting to 'none'. Update the trigger as needed.
# No name found, setting the default value '$(Date:yyyyMMdd).$(Rev:r)'. This value determines how your pipeline runs are numbered. Update the name as needed: https://learn.microsoft.com/en-us/azure/devops/pipelines/process/run-number?view=azure-devops&tabs=yaml

name: $(Date:yyyyMMdd).$(Rev:r)
variables:
  - name: Codeql.Enabled
    value: true
  - name: GRADLE_USER_HOME
    value: $(Pipeline.Workspace)/.gradle
  - name: TOOLKIT_BRANCH
    value: nonexistent-branch
  - name: USERPROFILE
    value: /home/vsts
resources:
  repositories:
    - repository: self
      type: git
      ref: refs/heads/develop
    - repository: 1esPipelines
      type: git
      name: 1ESPipelineTemplates/1ESPipelineTemplates
      ref: refs/tags/release
trigger: none
extends:
  template: v1/1ES.Official.PipelineTemplate.yml@1esPipelines
  parameters:
    pool:
      name: 1ES_JavaTooling_Pool
      image: windows-latest
      os: windows
    customBuildTags:
      - MigrationTooling-mseng-VSJava-10967-Tool
    stages:
      - stage: Stage
        jobs:
          - job: Job_1
            displayName: Agent job 1
            templateContext:
              outputs:
                - output: pipelineArtifact
                  artifactName: drop
                  targetPath: $(build.artifactstagingdirectory)/zip
                  displayName: "Publish Artifact: drop"
                  condition: succeededOrFailed()
            steps:
              - checkout: self
                clean: true
                fetchTags: false
              - task: JavaToolInstaller@0
                displayName: Use Java 17
                inputs:
                  versionSpec: "17"
                  jdkArchitectureOption: x64
                  jdkSourceOption: PreInstalled
              - task: ms-devlabs.utilitytasks.task-Shellpp.Shellpp@0
                displayName: Prepare Environment
                inputs:
                  type: InlineScript
                  script: |-
                    # Set Environment Variables
                     export JAVA_HOME=$JAVA_HOME_17_X64
                     export PATH=$JAVA_HOME/bin:$PATH

                     echo "##vso[task.setvariable variable=JAVA_HOME]$JAVA_HOME"
                     echo "##vso[task.setvariable variable=PATH]$PATH"
              - task: ms-devlabs.utilitytasks.task-Shellpp.Shellpp@0
                displayName: Build Toolkit Libs($(TOOLKIT_BRANCH) || $(System.PullRequest.SourceBranch) || $(System.PullRequest.TargetBranch) || develop)
                inputs:
                  type: InlineScript
                  script: |-
                    CUSTOM_BRANCH=$(TOOLKIT_BRANCH)
                    SOURCE_BRANCH=$(System.PullRequest.SourceBranch)
                    TARGET_BRANCH=$(System.PullRequest.TargetBranch)

                    ls ~/.m2/repository/com/microsoft/azure/azure-toolkit-*
                    cd ..
                    git clone https://github.com/microsoft/azure-maven-plugins.git
                    cd azure-maven-plugins

                    custom_existed_in_remote=$(git ls-remote --heads origin ${CUSTOM_BRANCH})
                    source_existed_in_remote=$(git ls-remote --heads origin ${SOURCE_BRANCH})
                    target_existed_in_remote=$(git ls-remote --heads origin ${TARGET_BRANCH})
                    if [[ -n ${custom_existed_in_remote} ]]; then
                        BRANCH=$CUSTOM_BRANCH
                    elif [[ -n ${source_existed_in_remote} ]]; then
                        BRANCH=$SOURCE_BRANCH
                    elif [[ -n ${target_existed_in_remote} ]]; then
                        BRANCH=$TARGET_BRANCH
                    fi

                    echo "build azure-toolkit-libs: $BRANCH"
                    git fetch origin $BRANCH
                    git checkout $BRANCH

                    git branch
                    mvn clean install -f azure-toolkit-libs/pom.xml -B -T 4 -Dmaven.test.skip=true -Dmdep.analyze.skip=true -Dmaven.source.skip=true -Dmaven.javadoc.skip=true -Dcheckstyle.skip || exit -1

                    ls ~/.m2/repository/com/microsoft/azure/azure-toolkit-*
                    echo "cleaning up battlefield."
                    cd ../
                    rm -rf ./azure-maven-plugins
                    exit 0
              - task: ms-devlabs.utilitytasks.task-Shellpp.Shellpp@0
                displayName: Build Utils
                inputs:
                  type: InlineScript
                  script: ./gradlew buildUtils -x buildToolkitsLib || exit -1
              - task: ms-devlabs.utilitytasks.task-Shellpp.Shellpp@0
                displayName: Build IntelliJ
                inputs:
                  type: InlineScript
                  script: cd PluginsAndFeatures/azure-toolkit-for-intellij && ./gradlew clean buildPlugin -s
              - task: ms-devlabs.utilitytasks.task-Shellpp.Shellpp@0
                displayName: Rename & Upload Checkstyle reports
                condition: succeededOrFailed()
                inputs:
                  type: InlineScript
                  script: |-
                    ./gradlew --stop 
                    sudo apt-get install rename
                    echo "BUILD_NUMBER = $(Build.BuildNumber)"
                    DATE=`date +%m-%d-%Y`
                    rename "s/.zip/.develop.$(Build.BuildNumber).${DATE}.zip/" artifacts/*.zip
                continueOnError: true
              - task: CopyFiles@2
                displayName: "Copy Files to: $(build.artifactstagingdirectory)/zip"
                condition: succeededOrFailed()
                inputs:
                  SourceFolder: $(Build.Repository.LocalPath)/PluginsAndFeatures/azure-toolkit-for-intellij/build/distributions
                  Contents: "**/*.zip"
                  TargetFolder: $(build.artifactstagingdirectory)/zip
                continueOnError: true
              - task: AzureArtifacts.manifest-generator-task.manifest-generator-task.ManifestGeneratorTask@0
                displayName: "Manifest Generator "
                inputs:
                  BuildDropPath: $(build.artifactstagingdirectory)/zip
